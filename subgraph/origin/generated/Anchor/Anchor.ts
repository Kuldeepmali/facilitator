// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class StateRootAvailable extends EthereumEvent {
  get params(): StateRootAvailable__Params {
    return new StateRootAvailable__Params(this);
  }
}

export class StateRootAvailable__Params {
  _event: StateRootAvailable;

  constructor(event: StateRootAvailable) {
    this._event = event;
  }

  get _blockNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _stateRoot(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class Anchor extends SmartContract {
  static bind(address: Address): Anchor {
    return new Anchor("Anchor", address);
  }

  consensus(): Address {
    let result = super.call("consensus", []);

    return result[0].toAddress();
  }

  try_consensus(): CallResult<Address> {
    let result = super.tryCall("consensus", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getLatestStateRootBlockNumber(): BigInt {
    let result = super.call("getLatestStateRootBlockNumber", []);

    return result[0].toBigInt();
  }

  try_getLatestStateRootBlockNumber(): CallResult<BigInt> {
    let result = super.tryCall("getLatestStateRootBlockNumber", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  getStateRoot(_blockNumber: BigInt): Bytes {
    let result = super.call("getStateRoot", [
      EthereumValue.fromUnsignedBigInt(_blockNumber)
    ]);

    return result[0].toBytes();
  }

  try_getStateRoot(_blockNumber: BigInt): CallResult<Bytes> {
    let result = super.tryCall("getStateRoot", [
      EthereumValue.fromUnsignedBigInt(_blockNumber)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBytes());
  }
}

export class SetupCall extends EthereumCall {
  get inputs(): SetupCall__Inputs {
    return new SetupCall__Inputs(this);
  }

  get outputs(): SetupCall__Outputs {
    return new SetupCall__Outputs(this);
  }
}

export class SetupCall__Inputs {
  _call: SetupCall;

  constructor(call: SetupCall) {
    this._call = call;
  }

  get _maxStateRoots(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _consensus(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetupCall__Outputs {
  _call: SetupCall;

  constructor(call: SetupCall) {
    this._call = call;
  }
}

export class AnchorStateRootCall extends EthereumCall {
  get inputs(): AnchorStateRootCall__Inputs {
    return new AnchorStateRootCall__Inputs(this);
  }

  get outputs(): AnchorStateRootCall__Outputs {
    return new AnchorStateRootCall__Outputs(this);
  }
}

export class AnchorStateRootCall__Inputs {
  _call: AnchorStateRootCall;

  constructor(call: AnchorStateRootCall) {
    this._call = call;
  }

  get _blockNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _stateRoot(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class AnchorStateRootCall__Outputs {
  _call: AnchorStateRootCall;

  constructor(call: AnchorStateRootCall) {
    this._call = call;
  }
}
